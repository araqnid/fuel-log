apply plugin: 'base'

task npmInstall(type: Exec) {
    inputs.file "package.json"
    outputs.dir "node_modules"
    commandLine "npm", "install"
}

task webpack(type: Exec, dependsOn: npmInstall) {
    outputs.dir "build/site"
    inputs.dir "src/main/javascript"
    inputs.file 'webpack.config.js'
    environment("NODE_ENV", "production")
    commandLine "node_modules/.bin/webpack", "-p", "--devtool", "source-map"
}

task staticFiles(type: Copy) {
    from 'src/main/web'
    into 'build/site'
    include 'index.html'
    include 'images/**'
}

task appStatusUi {
    outputs.dir "build/site/_status"
    doLast {
        def cfg = rootProject.configurations.compile.copy()
        cfg.transitive = false
        def jarfile = cfg.files { dep -> dep.group == "org.araqnid" && dep.name == "app-status" }[0]
        def tmpdir = new File(buildDir, "appStatus")
        copy {
            from zipTree(jarfile)
            include 'org/araqnid/appstatus/site/**'
            into tmpdir
        }
        copy {
            from new File(tmpdir, "org/araqnid/appstatus/site")
            into project.file("build/site/_status")
        }
    }
}

clean {
    delete "node_modules"
}

task site(dependsOn: [webpack, staticFiles, appStatusUi])

assemble.dependsOn(site)
